How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could see the lines of the sections that were different and could focus
	my attention on them. It still took me sometime to find the errror, 
	but definitely less than if I had opened both files and searched line by line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could see changes between versions more easily. I would not be afraid 
	of breaking the code, since I could go back to previous 
	versions, if necessary. Plus it is convenient to keep track of how the
	code evolves.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    	Pros: You only commit the important changes.
	Cons: You may forget to commit something important.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It is more efficient, besides a logical change can consist of several modifications in
	multiple files.

How can you use the commands git log and git diff to view the history of files?

    git log allows you to see the entire commit history (id, author, date and message)
	in chronological order, so it is important to write sensible messages when committing.
	git diff commitid1 commitid2, allows you to see the changes between both commits, the 
	lines that were added and deleted. So combining both commands you can
	understand how the code has evolved and find bugs, for examples.

How might using version control make you more confident to make changes that
could break something?

    It will definitely give me confidence to modify code knowing that, in the worst
	case scenario, I can always go back to the previous working version.

Now that you have your workspace set up, what do you want to try using Git for?

    For version control and also use it together with GitHub for collaboration.
