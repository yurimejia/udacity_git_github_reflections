How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    I could see the lines of the sections that were different and could focus
	my attention on them. It still took me sometime, but less than if I had
	open both files and search line by line.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could see what has changed between versions. Go back to previous 
	versions. Also it would help for collaboration with other programmers.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You only commit the important changes. 
	Cons: You may forget to commit something important and loose it.
	You need to be aware of the project development at all time.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It makes it more efficient. 

How can you use the commands git log and git diff to view the history of files?

    I still do not know it.

How might using version control make you more confident to make changes that
could break something?

    It will definitely give confidence to modify code knowing that in the worst
	case scenario I can always go back to the previous working version.

Now that you have your workspace set up, what do you want to try using Git for?

    For version control and also use it together with GitHub for collaboration.
